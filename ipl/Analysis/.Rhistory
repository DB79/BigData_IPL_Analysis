sr = sqldf('
select batsman, ((cast(Runs_Per_Match as float)/Balls_Faced_Per_Match )*100) as "strike_rate"
from batsman_stats_per_match
group by batsman')
batsman_stats_per_match <- merge(batsman_stats_per_match, sr, by.x = "batsman", by.y = "batsman")
###########################################################################################################
# Boxplot of Average Number of Balls Faced per player per match
###########################################################################################################
png(filename="Images/Boxplot_Average_Number_Of_Balls_Faced.png")
boxplot(batsman_stats_per_match$Balls_Faced_Per_Match ,main="Boxplot of Balls Faced Per Match Per Player", ylab="Average Number of Balls Faced")
dev.off()
summary(batsman_stats_per_match$Balls_Faced_Per_Match)
###########################################################################################################
# Scatter Plot of Runs Scored vs Balls Faced
###########################################################################################################
png(filename="Images/Scatter_Plot_Runs_Scored_Vs_Balls_Faced.png")
plot(batsman_stats_per_match$Balls_Faced_Per_Match,
batsman_stats_per_match$Runs_Per_Match,
main = "Scatter Plot of Runs Scored vs Balls Faced",
xlab = "Average Balls Faced",
ylab = "Average Runs Scored")
dev.off()
cor(batsman_stats_per_match$Runs_Per_Match, batsman_stats_per_match$Balls_Faced_Per_Match)
###########################################################################################################
# Scatter Plot of Strike Rate vs Balls Faced
###########################################################################################################
png(filename="Images/Scatter_Plot_Strike_Vs_Balls_Faced.png")
plot(batsman_stats_per_match$Balls_Faced_Per_Match,
batsman_stats_per_match$strike_rate,
main = "Scatter Plot of Strike Rate vs Balls Faced",
xlab = "Average Balls Faced",
ylab = "Average Strike Rate")
dev.off()
cor(batsman_stats_per_match$Balls_Faced_Per_Match, batsman_stats_per_match$strike_rate)
###########################################################################################################
# Scatter Plot of No. of Boundaries vs Balls Faced
###########################################################################################################
png(filename="Images/Scatter_Plot_Boundaries_Vs_Balls_Faced.png")
plot(batsman_stats_per_match$Balls_Faced_Per_Match,
batsman_stats_per_match$Boundaries_Per_Match,
main = "Scatter Plot of Boundaries Scored vs Balls Faced",
xlab = "Average Balls Faced",
ylab = "Average Boundaries")
dev.off()
cor(batsman_stats_per_match$Balls_Faced_Per_Match, batsman_stats_per_match$Boundaries_Per_Match)
###########################################################################################################
# Scatter Plot of Strike Rate vs No. of Boundaries
###########################################################################################################
png(filename="Images/Scatter_Plot_Boundaries_Vs_Strike_Rate.png")
plot(batsman_stats_per_match$Boundaries_Per_Match,
batsman_stats_per_match$strike_rate,
main = "Scatter Plot of Strike Rate vs Boundaries",
xlab = "Average Boundaries",
ylab = "Average Strike Rate")
dev.off()
cor(batsman_stats_per_match$strike_rate, batsman_stats_per_match$Boundaries_Per_Match)
###
# SET WORKING DIRECTORY TO SOURCE FILE LOCATION
# Session -> Set Working Directory -> To Sourec File Location
###
#install.packages("sqldf")
#install.packages("rpart")
#install.packages('rattle')
#install.packages('rpart.plot')
#install.packages('RColorBrewer')
#install.packages("arules")
#install.packages("arulesViz")
#install.packages("sqldf")
library(sqldf)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(sqldf)
library(rpart)
library("arules")
library("arulesViz")
deliveries <- read.csv("deliveries.csv", stringsAsFactors=TRUE)
##############################################################################################################################
# Add Outcome Field which is used in assocciation rules
##############################################################################################################################
# Dot balls - no runs scored
deliveries$outcome[deliveries$total_runs == 0] <- 'Dot Ball'
# Low Score - 1 to 3 runs
deliveries$outcome[deliveries$total_runs == 1] <- 'Low Score'
deliveries$outcome[deliveries$total_runs == 2] <-'Low Score'
deliveries$outcome[deliveries$total_runs == 3] <-'Low Score'
# High Score - 4+ runs
deliveries$outcome[deliveries$total_runs == 4] <-'High Score'
deliveries$outcome[deliveries$total_runs == 5] <-'High Score'
deliveries$outcome[deliveries$total_runs == 6] <-'High Score'
deliveries$outcome[deliveries$total_runs == 7] <-'High Score'
# Wicket - wicket taken by boler
deliveries$outcome[deliveries$player_dismissed != ""] <- 'Wicket'
deliveries$outcome <- as.factor(deliveries$outcome)
prop.table(table(deliveries$outcome, deliveries$bowling_team),2)
################################################################################################################################
# ASSOCIATION RULES
################################################################################################################################
################################################################################################################################
# GAYLE VS KKR
gayleVsKKR = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Kolkata Knight Riders"')
kkrRules = apriori(gayleVsKKR, parameter=list(support=0.00009, confidence=1))
inspect(kkrRules)
################################################################################################################################
#GAYLE VS MI
gayleVsMI = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Mumbai Indians"')
miRules = apriori(gayleVsMI, parameter=list(support=0.00009, confidence=1))
inspect(miRules)
# AB de Villiers VS MI
abVsMI = sqldf('select batsman, outcome from deliveries where batsman = "AB de Villiers" and bowling_team = "Mumbai Indians"')
abRules = apriori(abVsMI, parameter=list(support=0.00009, confidence=1))
inspect(abRules)
################################################################################################################################
#GAYLE VS SRH
gayleVsSRH = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Sunrisers Hyderabad"')
srhRules = apriori(gayleVsSRH, parameter=list(support=0.00009, confidence=1))
inspect(srhRules)
################################################################################################################################
#GAYLE VS Harbhajan Singh
gayleVsHS = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "Harbhajan Singh"')
hsRules = apriori(gayleVsHS, parameter=list(support=0.00009, confidence=1))
inspect(hsRules)
################################################################################################################################
#GAYLE VS SL Malinga
gayleVsLM = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "SL Malinga"')
lmRules = apriori(gayleVsLM, parameter=list(support=0.00009, confidence=1))
inspect(lmRules)
################################################################################################################################
#GAYLE VS P Kumar
gayleVsPK = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "P Kumar"')
pkRules = apriori(gayleVsPK, parameter=list(support=0.00009, confidence=1))
inspect(pkRules)
###
# SET WORKING DIRECTORY TO SOURCE FILE LOCATION
# Session -> Set Working Directory -> To Sourec File Location
###
setwd("../InitialDatasets")
#install.packages("sqldf")
library(sqldf)
# read all matches from csv
allMatches = read.csv("matches.csv")
# filter to get only completed matches with a result
completedMatches <- sqldf('SELECT * FROM allMatches where dl_applied == 0 AND result != "no result"')
# write completed matches to matches.csv in Analysis folder
write.csv(completedMatches,'../Analysis/matches.csv')
# update deliveries in Analysis folder to only include completed matches
deliveries <-read.csv("deliveries.csv")
deliveriesFromCompletedMatches <- sqldf('select * from deliveries where match_id in (select id from completedMatches)')
write.csv(deliveriesFromCompletedMatches,'../Analysis/deliveries.csv')
setwd("../Analysis")
###
# SET WORKING DIRECTORY TO SOURCE FILE LOCATION
# Session -> Set Working Directory -> To Sourec File Location
###
#install.packages("sqldf")
#install.packages("dplyr")
library(sqldf)
library(dplyr)
library(ggplot2)
matches <- read.csv('matches.csv')
deliveries <- read.csv('deliveries.csv')
#  get each team that has played a game
df_teams<-(as.data.frame(unique(matches$team1)))
# column name = team
colnames(df_teams)[1]<-"team"
# total wins for each team
df_wins<-matches %>%
filter(result == "normal" | result == "tie") %>%
group_by(winner) %>%
summarise(total_win = n_distinct(id))
# merge two data-frames
df_teams<-merge(df_teams, df_wins, by.x = "team", by.y = "winner")
# get total matches where team is team1 and team is team2
total_team1_matches_per_team <- sqldf('select team1 as "team", count(id) as "matches" from matches group by team1')
total_team2_matches_per_team <- sqldf('select team2 as "team", count(id) as "matches" from matches group by team2')
# combine both sets above th get total numbuer of games per team
total_matches_per_team <- sqldf('
select team,sum(matches) total_matches
from
(
select team,matches
from total_team1_matches_per_team
union all
select team,matches
from total_team2_matches_per_team
) t
group by team')
# combine data frames, no. wins, total matches
df_teams<-merge(df_teams, total_matches_per_team, by.x = "team", by.y = "team")
# get win % based on total wins and total matches
df_teams<-df_teams %>%
mutate(winning_perc = (total_win/total_matches_per_team$total)*100)
##########################################################################################
# Graph of Teams Winning %
##########################################################################################
png(filename="Images/Bar_Graph_Win_Percent_Per_Team.png")
ggplot(df_teams, aes(x= reorder(team, winning_perc), y= winning_perc))+
geom_bar(fill = 'grey', stat = "identity")+
theme_classic()+
ggtitle('Winning Percent per Team')+
labs(x = "Team", y = "Winning Percentage")+
scale_fill_grey()+
coord_flip()+
geom_text(aes(label = winning_perc, y = winning_perc),
size = 3,  position = position_dodge(0.9), vjust = 0)
dev.off()
##########################################################################################
# Scatter Plot of Runs Scored Vs Winning %
##########################################################################################
Runs_Scored_Per_Team <- sqldf('select sum(total_runs) AS "total_runs", batting_team from deliveries group by batting_team order by 1 DESC')
Runs_Scored_Per_Team <- merge(Runs_Scored_Per_Team, total_matches_per_team, by.x = "batting_team", by.y = "team")
Runs_Scored_Per_Match_Per_Team <- sqldf('select batting_team, (cast(total_runs as float)/total_matches) as "Runs_Per_Match" from Runs_Scored_Per_Team group by batting_team')
Runs_Scored_Per_Team <- merge(Runs_Scored_Per_Team, Runs_Scored_Per_Match_Per_Team, by.x = "batting_team", by.y = "batting_team")
png(filename="Images/Scatter_Plot_Winning_Percentage_Vs_Runs_Scored.png")
plot(df_teams$winning_perc,
Runs_Scored_Per_Team$Runs_Per_Match,
xlab = "Winning Percentage",
ylab = "Avaerage Runs Scored",
main = "Scatter Plor of Average Runs Scored Vs Winning %")
dev.off()
cor(df_teams$winning_perc, Runs_Scored_Per_Team$Runs_Per_Match)
##########################################################################################
# Scatter Plot of Runs Conceded Vs Winning %
##########################################################################################
Runs_Conceded_Per_Team <- sqldf('select sum(total_runs) AS "total_runs", bowling_team from deliveries group by bowling_team order by 1 DESC')
Runs_Conceded_Per_Team <- merge(Runs_Conceded_Per_Team, total_matches_per_team, by.x = "bowling_team", by.y = "team")
Runs_Conceded_Per_Match_Per_Team <- sqldf('select bowling_team, (cast(total_runs as float)/total_matches) as "Runs_Per_Match" from Runs_Conceded_Per_Team group by bowling_team')
Runs_Conceded_Per_Team <- merge(Runs_Conceded_Per_Team, Runs_Conceded_Per_Match_Per_Team, by.x = "bowling_team", by.y = "bowling_team")
png(filename="Images/Scatter_Plot_Winning_Percentage_Vs_Runs_Conceded.png")
plot(df_teams$winning_perc,
Runs_Conceded_Per_Team$Runs_Per_Match,
xlab = "Winning Percentage",
ylab = "Avaerage Runs Conceded",
main = "Scatter Plor of Average Runs Conceded Vs Winning %")
dev.off()
cor(df_teams$winning_perc, Runs_Conceded_Per_Match_Per_Team$Runs_Per_Match)
##########################################################################################
# Scatter Plot of Wickets Taken Vs Winning %
##########################################################################################
wickets <- sqldf('select bowling_team, count(*) as "Total_Wickets_Taken" from deliveries where dismissal_kind != "" group by bowling_team')
wickets <- merge(wickets, total_matches_per_team, by.x = "bowling_team", by.y = "team")
wickets_per_match <- sqldf('select bowling_team ,(cast(Total_Wickets_Taken as float)/total_matches) as "Wickets_Per_Match" from wickets group by bowling_team')
wickets <- merge(wickets, wickets_per_match, by.x = "bowling_team", by.y = "bowling_team")
png(filename="Images/Scatter_Plot_Winning_Percentage_Vs_Wickets_Taken.png")
plot(df_teams$winning_perc,
wickets$Wickets_Per_Match,
xlab = "Winning Percentage",
ylab = "Avaerage Wickets Taken",
main = "Scatter Plor of Average Wickets Taken Vs Winning %")
dev.off()
cor(df_teams$winning_perc, wickets$Wickets_Per_Match)
###
# SET WORKING DIRECTORY TO SOURCE FILE LOCATION
# Session -> Set Working Directory -> To Sourec File Location
###
#install.packages("ggrepel")
#install.packages("dplyr")
#install.packages("sqldf")
#install.packages("ggplot2")
library(sqldf)
library(ggplot2)
library(dplyr)
library(ggrepel)
deliveries <- read.csv('deliveries.csv')
########################################################################################################################
# Perform Analysis of Data to create new data which will be used in ANalysis
########################################################################################################################
# get total number of matches played by each platyer
matches_per_player <- sqldf('
select bowler,
count(DISTINCT(match_id)) as "total_matches"
from deliveries group by bowler')
# dot balls, total balls, runs conceded by each player
bowler_stats <- group_by(deliveries, bowler)%>%
summarise(dot_balls = sum(ifelse(batsman_runs ==0 & extra_runs == 0 , 1, 0 )),
total_balls = sum(ifelse(wide_runs == 1 & noball_runs == 1, 0, 1 )),
total_runs = sum(batsman_runs+extra_runs))
# add number of games played per player
bowler_stats <- merge(bowler_stats, matches_per_player, by.x = "bowler", by.y = "bowler")
# total wickets per player
total_wickets_per_player <- group_by(deliveries, bowler)%>%
summarise(wickets = sum(ifelse(dismissal_kind
%in% c("caught", "bowled", "lbw", "caught and bowled"), 1,0)))
bowler_stats <- merge(bowler_stats,
total_wickets_per_player,
by.x = "bowler",
by.y = "bowler")
# remove bowler name to allow for creation of boxplots
bowler_overall_stats <- sqldf('
select dot_balls as "Dots" ,
total_balls as "Deliveries",
total_runs as "Runs_Conceded",
wickets,
total_matches
from bowler_stats')
bowler_stats_Per_match <- sqldf('
select (total_balls/total_matches) as "Deliveries_Per_Match",
(total_runs/total_matches) as "Runs_Conceded_Per_Match",
(dot_balls/total_matches) as "Dots_Per_Match",
(wickets/total_matches) as "Wickets_Per_Match"
from bowler_stats')
########################################################################################################################
# boxplot of Deliveries per player per match
########################################################################################################################
png(filename="Images/Boxplot_Player_Deliveries_Per_Match.png")
boxplot(bowler_stats_Per_match$Deliveries_Per_Match,
main="Boxplot of Deliveries per player per match",
ylab="Number of Deliveries")
dev.off()
summary(bowler_stats_Per_match$Deliveries_Per_Match)
########################################################################################################################
# Scatter Plot of Run Conceeded Vs Number of Deliveries
########################################################################################################################
png(filename="Images/Scatter_Plot_Runs_Conceded_Vs_Deliveries.png")
plot(bowler_stats_Per_match$Deliveries_Per_Match,
bowler_stats_Per_match$Runs_Conceded_Per_Match,
main = "Scatter Plot	of Runs Conceded vs No. of Deliveries",
xlab = "Average No. Of Deliveries",
ylab = "Average Runs Conceded")
dev.off()
cor(bowler_stats_Per_match$Deliveries_Per_Match, bowler_stats_Per_match$Runs_Conceded_Per_Match)
########################################################################################################################
# Scatter Plot of Dot Balls Vs Number of Deliveries
########################################################################################################################
png(filename="Images/Scatter_Plot_Dots_Balls_Vs_Deliveries.png")
plot(bowler_stats_Per_match$Deliveries_Per_Match,
bowler_stats_Per_match$Dots_Per_Match,
main = "Scatter Plot of No. of Dot Balls vs No. of Deliveries",
xlab = "Average No. Of Deliveries",
ylab = "Average Dot Balls")
dev.off()
cor(bowler_stats_Per_match$Deliveries_Per_Match, bowler_stats_Per_match$Dots_Per_Match)
########################################################################################################################
# Scatter Plot of Wicets Taken Vs Number of Deliveries
########################################################################################################################
png(filename="Images/Scatter_Plot_Wickets_Taken_Vs_Deliveries.png")
plot(bowler_stats_Per_match$Deliveries_Per_Match,
bowler_stats_Per_match$Wickets_Per_Match,
main = "Scatter Plot of Wickets Taken vs No. of Deliveries",
xlab = "Average No. Of Deliveries",
ylab = "Average Wickets Taken")
dev.off()
cor(bowler_stats_Per_match$Deliveries_Per_Match, bowler_stats_Per_match$Wickets_Per_Match)
###
# SET WORKING DIRECTORY TO SOURCE FILE LOCATION
# Session -> Set Working Directory -> To Sourec File Location
###
#install.packages("ggrepel")
#install.packages("dplyr")
#install.packages("sqldf")
#install.packages("ggplot2")
library(sqldf)
library(ggplot2)
library(dplyr)
library(ggrepel)
deliveries <- read.csv('deliveries.csv');
########################################################################################################################
# Perform Analysis of Data to create new data which will be used in ANalysis
########################################################################################################################
#total matches per player
matches_per_player <- sqldf('
select batsman, count(DISTINCT(match_id)) as "total_matches"
from deliveries
group by batsman')
# get runs, balls and strike rate for all batsmen
batsman <- sqldf('
SELECT batsman, SUM(batsman_runs) AS "runs", Count(match_id) AS "balls"
FROM deliveries
GROUP BY batsman')
batsman_overall_stats <- merge(batsman, matches_per_player, by.x = "batsman", by.y = "batsman")
Boundaries_Per_Batsman  <- group_by(deliveries, batsman) %>%
summarise(boundaries = sum(ifelse(batsman_runs==4 | batsman_runs==6, 1, 0)))%>%
arrange(desc(boundaries))
batsman_overall_stats <- merge(batsman_overall_stats, Boundaries_Per_Batsman, by.x = "batsman", by.y = "batsman")
batsman_stats_per_match <- sqldf('
select batsman,
(runs/total_matches) as "Runs_Per_Match",
(balls/total_matches) as "Balls_Faced_Per_Match",
(boundaries/total_matches) as "Boundaries_Per_Match"
from batsman_overall_stats group by batsman')
sr = sqldf('
select batsman, ((cast(Runs_Per_Match as float)/Balls_Faced_Per_Match )*100) as "strike_rate"
from batsman_stats_per_match
group by batsman')
batsman_stats_per_match <- merge(batsman_stats_per_match, sr, by.x = "batsman", by.y = "batsman")
###########################################################################################################
# Boxplot of Average Number of Balls Faced per player per match
###########################################################################################################
png(filename="Images/Boxplot_Average_Number_Of_Balls_Faced.png")
boxplot(batsman_stats_per_match$Balls_Faced_Per_Match ,main="Boxplot of Balls Faced Per Match Per Player", ylab="Average Number of Balls Faced")
dev.off()
summary(batsman_stats_per_match$Balls_Faced_Per_Match)
###########################################################################################################
# Scatter Plot of Runs Scored vs Balls Faced
###########################################################################################################
png(filename="Images/Scatter_Plot_Runs_Scored_Vs_Balls_Faced.png")
plot(batsman_stats_per_match$Balls_Faced_Per_Match,
batsman_stats_per_match$Runs_Per_Match,
main = "Scatter Plot of Runs Scored vs Balls Faced",
xlab = "Average Balls Faced",
ylab = "Average Runs Scored")
dev.off()
cor(batsman_stats_per_match$Runs_Per_Match, batsman_stats_per_match$Balls_Faced_Per_Match)
###########################################################################################################
# Scatter Plot of Strike Rate vs Balls Faced
###########################################################################################################
png(filename="Images/Scatter_Plot_Strike_Vs_Balls_Faced.png")
plot(batsman_stats_per_match$Balls_Faced_Per_Match,
batsman_stats_per_match$strike_rate,
main = "Scatter Plot of Strike Rate vs Balls Faced",
xlab = "Average Balls Faced",
ylab = "Average Strike Rate")
dev.off()
cor(batsman_stats_per_match$Balls_Faced_Per_Match, batsman_stats_per_match$strike_rate)
###########################################################################################################
# Scatter Plot of No. of Boundaries vs Balls Faced
###########################################################################################################
png(filename="Images/Scatter_Plot_Boundaries_Vs_Balls_Faced.png")
plot(batsman_stats_per_match$Balls_Faced_Per_Match,
batsman_stats_per_match$Boundaries_Per_Match,
main = "Scatter Plot of Boundaries Scored vs Balls Faced",
xlab = "Average Balls Faced",
ylab = "Average Boundaries")
dev.off()
cor(batsman_stats_per_match$Balls_Faced_Per_Match, batsman_stats_per_match$Boundaries_Per_Match)
###########################################################################################################
# Scatter Plot of Strike Rate vs No. of Boundaries
###########################################################################################################
png(filename="Images/Scatter_Plot_Boundaries_Vs_Strike_Rate.png")
plot(batsman_stats_per_match$Boundaries_Per_Match,
batsman_stats_per_match$strike_rate,
main = "Scatter Plot of Strike Rate vs Boundaries",
xlab = "Average Boundaries",
ylab = "Average Strike Rate")
dev.off()
cor(batsman_stats_per_match$strike_rate, batsman_stats_per_match$Boundaries_Per_Match)
###
# SET WORKING DIRECTORY TO SOURCE FILE LOCATION
# Session -> Set Working Directory -> To Sourec File Location
###
#install.packages("sqldf")
#install.packages("rpart")
#install.packages('rattle')
#install.packages('rpart.plot')
#install.packages('RColorBrewer')
#install.packages("arules")
#install.packages("arulesViz")
#install.packages("sqldf")
library(sqldf)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(sqldf)
library(rpart)
library("arules")
library("arulesViz")
deliveries <- read.csv("deliveries.csv", stringsAsFactors=TRUE)
##############################################################################################################################
# Add Outcome Field which is used in assocciation rules
##############################################################################################################################
# Dot balls - no runs scored
deliveries$outcome[deliveries$total_runs == 0] <- 'Dot Ball'
# Low Score - 1 to 3 runs
deliveries$outcome[deliveries$total_runs == 1] <- 'Low Score'
deliveries$outcome[deliveries$total_runs == 2] <-'Low Score'
deliveries$outcome[deliveries$total_runs == 3] <-'Low Score'
# High Score - 4+ runs
deliveries$outcome[deliveries$total_runs == 4] <-'High Score'
deliveries$outcome[deliveries$total_runs == 5] <-'High Score'
deliveries$outcome[deliveries$total_runs == 6] <-'High Score'
deliveries$outcome[deliveries$total_runs == 7] <-'High Score'
# Wicket - wicket taken by boler
deliveries$outcome[deliveries$player_dismissed != ""] <- 'Wicket'
deliveries$outcome <- as.factor(deliveries$outcome)
prop.table(table(deliveries$outcome, deliveries$bowling_team),2)
################################################################################################################################
# ASSOCIATION RULES
################################################################################################################################
################################################################################################################################
# GAYLE VS KKR
gayleVsKKR = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Kolkata Knight Riders"')
kkrRules = apriori(gayleVsKKR, parameter=list(support=0.00009, confidence=1))
inspect(kkrRules)
################################################################################################################################
#GAYLE VS MI
gayleVsMI = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Mumbai Indians"')
miRules = apriori(gayleVsMI, parameter=list(support=0.00009, confidence=1))
inspect(miRules)
# AB de Villiers VS MI
abVsMI = sqldf('select batsman, outcome from deliveries where batsman = "AB de Villiers" and bowling_team = "Mumbai Indians"')
abRules = apriori(abVsMI, parameter=list(support=0.00009, confidence=1))
inspect(abRules)
################################################################################################################################
#GAYLE VS SRH
gayleVsSRH = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Sunrisers Hyderabad"')
srhRules = apriori(gayleVsSRH, parameter=list(support=0.00009, confidence=1))
inspect(srhRules)
################################################################################################################################
#GAYLE VS Harbhajan Singh
gayleVsHS = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "Harbhajan Singh"')
hsRules = apriori(gayleVsHS, parameter=list(support=0.00009, confidence=1))
inspect(hsRules)
################################################################################################################################
#GAYLE VS SL Malinga
gayleVsLM = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "SL Malinga"')
lmRules = apriori(gayleVsLM, parameter=list(support=0.00009, confidence=1))
inspect(lmRules)
################################################################################################################################
#GAYLE VS P Kumar
gayleVsPK = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "P Kumar"')
pkRules = apriori(gayleVsPK, parameter=list(support=0.00009, confidence=1))
inspect(pkRules)
