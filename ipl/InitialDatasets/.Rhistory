png(filename="Images/Boxplot_Average_Number_Of_Balls_Faced.png")
boxplot(batsman_stats_per_match$Balls_Faced_Per_Match ,main="Boxplot of Balls Faced Per Match Per Player", ylab="Average Number of Balls Faced")
dev.off()
summary(batsman_stats_per_match$Balls_Faced_Per_Match)
###########################################################################################################
# Scatter Plot of Runs Scored vs Balls Faced
###########################################################################################################
png(filename="Images/Scatter_Plot_Runs_Scored_Vs_Balls_Faced.png")
plot(batsman_stats_per_match$Balls_Faced_Per_Match,
batsman_stats_per_match$Runs_Per_Match,
main = "Scatter Plot of Runs Scored vs Balls Faced",
xlab = "Average Balls Faced",
ylab = "Average Runs Scored")
dev.off()
cor(batsman_stats_per_match$Runs_Per_Match, batsman_stats_per_match$Balls_Faced_Per_Match)
###########################################################################################################
# Scatter Plot of Strike Rate vs Balls Faced
###########################################################################################################
png(filename="Images/Scatter_Plot_Strike_Vs_Balls_Faced.png")
plot(batsman_stats_per_match$Balls_Faced_Per_Match,
batsman_stats_per_match$strike_rate,
main = "Scatter Plot of Strike Rate vs Balls Faced",
xlab = "Average Balls Faced",
ylab = "Average Strike Rate")
dev.off()
cor(batsman_stats_per_match$Balls_Faced_Per_Match, batsman_stats_per_match$strike_rate)
###########################################################################################################
# Scatter Plot of No. of Boundaries vs Balls Faced
###########################################################################################################
png(filename="Images/Scatter_Plot_Boundaries_Vs_Balls_Faced.png")
plot(batsman_stats_per_match$Balls_Faced_Per_Match,
batsman_stats_per_match$Boundaries_Per_Match,
main = "Scatter Plot of Boundaries Scored vs Balls Faced",
xlab = "Average Balls Faced",
ylab = "Average Boundaries")
dev.off()
cor(batsman_stats_per_match$Balls_Faced_Per_Match, batsman_stats_per_match$Boundaries_Per_Match)
###########################################################################################################
# Scatter Plot of Strike Rate vs No. of Boundaries
###########################################################################################################
png(filename="Images/Scatter_Plot_Boundaries_Vs_Strike_Rate.png")
plot(batsman_stats_per_match$Boundaries_Per_Match,
batsman_stats_per_match$strike_rate,
main = "Scatter Plot of Strike Rate vs Boundaries",
xlab = "Average Boundaries",
ylab = "Average Strike Rate")
dev.off()
cor(batsman_stats_per_match$strike_rate, batsman_stats_per_match$Boundaries_Per_Match)
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
#install.packages("sqldf")
#install.packages("rpart")
#install.packages('rattle')
#install.packages('rpart.plot')
#install.packages('RColorBrewer')
#install.packages("arules")
#install.packages("arulesViz")
#install.packages("sqldf")
library(sqldf)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(sqldf)
library(rpart)
library("arules")
library("arulesViz")
#deliveries <- read.csv("deliveries.csv")
deliveries <- read.csv("deliveries.csv", stringsAsFactors=TRUE)
##############################################################################################################################
# Add Outcome Field which is used in assocciation rules
##############################################################################################################################
# Dot balls - no runs scored
deliveries$outcome[deliveries$total_runs == 0] <- 'Dot Ball'
# Low Score - 1 to 3 runs
deliveries$outcome[deliveries$total_runs == 1] <- 'Low Score'
deliveries$outcome[deliveries$total_runs == 2] <-'Low Score'
deliveries$outcome[deliveries$total_runs == 3] <-'Low Score'
# High Score - 4+ runs
deliveries$outcome[deliveries$total_runs == 4] <-'High Score'
deliveries$outcome[deliveries$total_runs == 5] <-'High Score'
deliveries$outcome[deliveries$total_runs == 6] <-'High Score'
deliveries$outcome[deliveries$total_runs == 7] <-'High Score'
# Wicket - wicket taken by boler
deliveries$outcome[deliveries$player_dismissed != ""] <- 'Wicket'
prop.table(table(deliveries$outcome, deliveries$bowling_team),2)
deliveries <- read.csv("deliveries.csv", stringsAsFactors=TRUE)
##############################################################################################################################
# Add Outcome Field which is used in assocciation rules
##############################################################################################################################
# Dot balls - no runs scored
deliveries$outcome[deliveries$total_runs == 0] <- 'Dot Ball'
# Low Score - 1 to 3 runs
deliveries$outcome[deliveries$total_runs == 1] <- 'Low Score'
deliveries$outcome[deliveries$total_runs == 2] <-'Low Score'
deliveries$outcome[deliveries$total_runs == 3] <-'Low Score'
# High Score - 4+ runs
deliveries$outcome[deliveries$total_runs == 4] <-'High Score'
deliveries$outcome[deliveries$total_runs == 5] <-'High Score'
deliveries$outcome[deliveries$total_runs == 6] <-'High Score'
deliveries$outcome[deliveries$total_runs == 7] <-'High Score'
# Wicket - wicket taken by boler
deliveries$outcome[deliveries$player_dismissed != ""] <- 'Wicket'
deliveries$outcome <- as.factor(deliveries$outcome)
prop.table(table(deliveries$outcome, deliveries$bowling_team),2)
################################################################################################################################
# ASSOCIATION RULES
################################################################################################################################
################################################################################################################################
# GAYLE VS KKR
gayleVsKKR = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Kolkata Knight Riders"')
kkrRules = apriori(gayleVsKKR, parameter=list(support=0.00009, confidence=1))
inspect(kkrRules)
################################################################################################################################
#GAYLE VS MI
gayleVsMI = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Mumbai Indians"')
miRules = apriori(gayleVsMI, parameter=list(support=0.00009, confidence=1))
inspect(miRules)
# AB de Villiers VS MI
abVsMI = sqldf('select batsman, outcome from deliveries where batsman = "AB de Villiers" and bowling_team = "Mumbai Indians"')
abRules = apriori(abVsMI, parameter=list(support=0.00009, confidence=1))
inspect(abRules)
################################################################################################################################
#GAYLE VS SRH
gayleVsSRH = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Sunrisers Hyderabad"')
srhRules = apriori(gayleVsSRH, parameter=list(support=0.00009, confidence=1))
inspect(srhRules)
################################################################################################################################
#GAYLE VS Harbhajan Singh
gayleVsHS = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "Harbhajan Singh"')
hsRules = apriori(gayleVsHS, parameter=list(support=0.00009, confidence=1))
inspect(hsRules)
################################################################################################################################
#GAYLE VS SL Malinga
gayleVsLM = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "SL Malinga"')
lmRules = apriori(gayleVsLM, parameter=list(support=0.00009, confidence=1))
inspect(lmRules)
################################################################################################################################
#GAYLE VS P Kumar
gayleVsPK = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "P Kumar"')
pkRules = apriori(gayleVsPK, parameter=list(support=0.00009, confidence=1))
inspect(pkRules)
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
#install.packages("sqldf")
#install.packages("rpart")
#install.packages('rattle')
#install.packages('rpart.plot')
#install.packages('RColorBrewer')
#install.packages("arules")
#install.packages("arulesViz")
#install.packages("sqldf")
library(sqldf)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(sqldf)
library(rpart)
library("arules")
library("arulesViz")
#deliveries <- read.csv("deliveries.csv")
deliveries <- read.csv("deliveries.csv", stringsAsFactors=FALSE)
##############################################################################################################################
# Add Outcome Field which is used in assocciation rules
##############################################################################################################################
# Dot balls - no runs scored
deliveries$outcome[deliveries$total_runs == 0] <- 'Dot Ball'
# Low Score - 1 to 3 runs
deliveries$outcome[deliveries$total_runs == 1] <- 'Low Score'
deliveries$outcome[deliveries$total_runs == 2] <-'Low Score'
deliveries$outcome[deliveries$total_runs == 3] <-'Low Score'
# High Score - 4+ runs
deliveries$outcome[deliveries$total_runs == 4] <-'High Score'
deliveries$outcome[deliveries$total_runs == 5] <-'High Score'
deliveries$outcome[deliveries$total_runs == 6] <-'High Score'
deliveries$outcome[deliveries$total_runs == 7] <-'High Score'
# Wicket - wicket taken by boler
deliveries$outcome[deliveries$player_dismissed != ""] <- 'Wicket'
prop.table(table(deliveries$outcome, deliveries$bowling_team),2)
deliveries <- read.csv("deliveries.csv", stringsAsFactors=TRUE)
##############################################################################################################################
# Add Outcome Field which is used in assocciation rules
##############################################################################################################################
# Dot balls - no runs scored
deliveries$outcome[deliveries$total_runs == 0] <- 'Dot Ball'
# Low Score - 1 to 3 runs
deliveries$outcome[deliveries$total_runs == 1] <- 'Low Score'
deliveries$outcome[deliveries$total_runs == 2] <-'Low Score'
deliveries$outcome[deliveries$total_runs == 3] <-'Low Score'
# High Score - 4+ runs
deliveries$outcome[deliveries$total_runs == 4] <-'High Score'
deliveries$outcome[deliveries$total_runs == 5] <-'High Score'
deliveries$outcome[deliveries$total_runs == 6] <-'High Score'
deliveries$outcome[deliveries$total_runs == 7] <-'High Score'
# Wicket - wicket taken by boler
deliveries$outcome[deliveries$player_dismissed != ""] <- 'Wicket'
deliveries$outcome <- as.factor(deliveries$outcome)
prop.table(table(deliveries$outcome, deliveries$bowling_team),2)
################################################################################################################################
# ASSOCIATION RULES
################################################################################################################################
################################################################################################################################
# GAYLE VS KKR
gayleVsKKR = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Kolkata Knight Riders"')
kkrRules = apriori(gayleVsKKR, parameter=list(support=0.00009, confidence=1))
inspect(kkrRules)
################################################################################################################################
#GAYLE VS MI
gayleVsMI = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Mumbai Indians"')
miRules = apriori(gayleVsMI, parameter=list(support=0.00009, confidence=1))
inspect(miRules)
# AB de Villiers VS MI
abVsMI = sqldf('select batsman, outcome from deliveries where batsman = "AB de Villiers" and bowling_team = "Mumbai Indians"')
abRules = apriori(abVsMI, parameter=list(support=0.00009, confidence=1))
inspect(abRules)
################################################################################################################################
#GAYLE VS SRH
gayleVsSRH = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Sunrisers Hyderabad"')
srhRules = apriori(gayleVsSRH, parameter=list(support=0.00009, confidence=1))
inspect(srhRules)
################################################################################################################################
#GAYLE VS Harbhajan Singh
gayleVsHS = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "Harbhajan Singh"')
hsRules = apriori(gayleVsHS, parameter=list(support=0.00009, confidence=1))
inspect(hsRules)
################################################################################################################################
#GAYLE VS SL Malinga
gayleVsLM = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "SL Malinga"')
lmRules = apriori(gayleVsLM, parameter=list(support=0.00009, confidence=1))
inspect(lmRules)
################################################################################################################################
#GAYLE VS P Kumar
gayleVsPK = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "P Kumar"')
pkRules = apriori(gayleVsPK, parameter=list(support=0.00009, confidence=1))
inspect(pkRules)
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
#install.packages("sqldf")
#install.packages("rpart")
#install.packages('rattle')
#install.packages('rpart.plot')
#install.packages('RColorBrewer')
#install.packages("arules")
#install.packages("arulesViz")
#install.packages("sqldf")
library(sqldf)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(sqldf)
library(rpart)
library("arules")
library("arulesViz")
#deliveries <- read.csv("deliveries.csv")
deliveries <- read.csv("deliveries.csv", stringsAsFactors=FALSE)
##############################################################################################################################
# Add Outcome Field which is used in assocciation rules
##############################################################################################################################
# Dot balls - no runs scored
#deliveries$outcome[deliveries$total_runs == 0] <- 'Dot Ball'
# Low Score - 1 to 3 runs
#deliveries$outcome[deliveries$total_runs == 1] <- 'Low Score'
#deliveries$outcome[deliveries$total_runs == 2] <-'Low Score'
#deliveries$outcome[deliveries$total_runs == 3] <-'Low Score'
# High Score - 4+ runs
#deliveries$outcome[deliveries$total_runs == 4] <-'High Score'
#deliveries$outcome[deliveries$total_runs == 5] <-'High Score'
#deliveries$outcome[deliveries$total_runs == 6] <-'High Score'
#deliveries$outcome[deliveries$total_runs == 7] <-'High Score'
# Wicket - wicket taken by boler
#deliveries$outcome[deliveries$player_dismissed != ""] <- 'Wicket'
#prop.table(table(deliveries$outcome, deliveries$bowling_team),2)
#deliveries <- read.csv("deliveries.csv", stringsAsFactors=TRUE)
##############################################################################################################################
# Add Outcome Field which is used in assocciation rules
##############################################################################################################################
# Dot balls - no runs scored
deliveries$outcome[deliveries$total_runs == 0] <- 'Dot Ball'
# Low Score - 1 to 3 runs
deliveries$outcome[deliveries$total_runs == 1] <- 'Low Score'
deliveries$outcome[deliveries$total_runs == 2] <-'Low Score'
deliveries$outcome[deliveries$total_runs == 3] <-'Low Score'
# High Score - 4+ runs
deliveries$outcome[deliveries$total_runs == 4] <-'High Score'
deliveries$outcome[deliveries$total_runs == 5] <-'High Score'
deliveries$outcome[deliveries$total_runs == 6] <-'High Score'
deliveries$outcome[deliveries$total_runs == 7] <-'High Score'
# Wicket - wicket taken by boler
deliveries$outcome[deliveries$player_dismissed != ""] <- 'Wicket'
deliveries$outcome <- as.factor(deliveries$outcome)
prop.table(table(deliveries$outcome, deliveries$bowling_team),2)
################################################################################################################################
# ASSOCIATION RULES
################################################################################################################################
################################################################################################################################
# GAYLE VS KKR
gayleVsKKR = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Kolkata Knight Riders"')
kkrRules = apriori(gayleVsKKR, parameter=list(support=0.00009, confidence=1))
inspect(kkrRules)
################################################################################################################################
#GAYLE VS MI
gayleVsMI = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Mumbai Indians"')
miRules = apriori(gayleVsMI, parameter=list(support=0.00009, confidence=1))
inspect(miRules)
# AB de Villiers VS MI
abVsMI = sqldf('select batsman, outcome from deliveries where batsman = "AB de Villiers" and bowling_team = "Mumbai Indians"')
abRules = apriori(abVsMI, parameter=list(support=0.00009, confidence=1))
inspect(abRules)
################################################################################################################################
#GAYLE VS SRH
gayleVsSRH = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Sunrisers Hyderabad"')
srhRules = apriori(gayleVsSRH, parameter=list(support=0.00009, confidence=1))
inspect(srhRules)
################################################################################################################################
#GAYLE VS Harbhajan Singh
gayleVsHS = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "Harbhajan Singh"')
hsRules = apriori(gayleVsHS, parameter=list(support=0.00009, confidence=1))
inspect(hsRules)
################################################################################################################################
#GAYLE VS SL Malinga
gayleVsLM = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "SL Malinga"')
lmRules = apriori(gayleVsLM, parameter=list(support=0.00009, confidence=1))
inspect(lmRules)
################################################################################################################################
#GAYLE VS P Kumar
gayleVsPK = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "P Kumar"')
pkRules = apriori(gayleVsPK, parameter=list(support=0.00009, confidence=1))
inspect(pkRules)
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
#install.packages("sqldf")
#install.packages("rpart")
#install.packages('rattle')
#install.packages('rpart.plot')
#install.packages('RColorBrewer')
#install.packages("arules")
#install.packages("arulesViz")
#install.packages("sqldf")
library(sqldf)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(sqldf)
library(rpart)
library("arules")
library("arulesViz")
#deliveries <- read.csv("deliveries.csv")
deliveries <- read.csv("deliveries.csv", stringsAsFactors=TRUE)
##############################################################################################################################
# Add Outcome Field which is used in assocciation rules
##############################################################################################################################
# Dot balls - no runs scored
#deliveries$outcome[deliveries$total_runs == 0] <- 'Dot Ball'
# Low Score - 1 to 3 runs
#deliveries$outcome[deliveries$total_runs == 1] <- 'Low Score'
#deliveries$outcome[deliveries$total_runs == 2] <-'Low Score'
#deliveries$outcome[deliveries$total_runs == 3] <-'Low Score'
# High Score - 4+ runs
#deliveries$outcome[deliveries$total_runs == 4] <-'High Score'
#deliveries$outcome[deliveries$total_runs == 5] <-'High Score'
#deliveries$outcome[deliveries$total_runs == 6] <-'High Score'
#deliveries$outcome[deliveries$total_runs == 7] <-'High Score'
# Wicket - wicket taken by boler
#deliveries$outcome[deliveries$player_dismissed != ""] <- 'Wicket'
#prop.table(table(deliveries$outcome, deliveries$bowling_team),2)
#deliveries <- read.csv("deliveries.csv", stringsAsFactors=TRUE)
##############################################################################################################################
# Add Outcome Field which is used in assocciation rules
##############################################################################################################################
# Dot balls - no runs scored
deliveries$outcome[deliveries$total_runs == 0] <- 'Dot Ball'
# Low Score - 1 to 3 runs
deliveries$outcome[deliveries$total_runs == 1] <- 'Low Score'
deliveries$outcome[deliveries$total_runs == 2] <-'Low Score'
deliveries$outcome[deliveries$total_runs == 3] <-'Low Score'
# High Score - 4+ runs
deliveries$outcome[deliveries$total_runs == 4] <-'High Score'
deliveries$outcome[deliveries$total_runs == 5] <-'High Score'
deliveries$outcome[deliveries$total_runs == 6] <-'High Score'
deliveries$outcome[deliveries$total_runs == 7] <-'High Score'
# Wicket - wicket taken by boler
deliveries$outcome[deliveries$player_dismissed != ""] <- 'Wicket'
deliveries$outcome <- as.factor(deliveries$outcome)
prop.table(table(deliveries$outcome, deliveries$bowling_team),2)
################################################################################################################################
# ASSOCIATION RULES
################################################################################################################################
################################################################################################################################
# GAYLE VS KKR
gayleVsKKR = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Kolkata Knight Riders"')
kkrRules = apriori(gayleVsKKR, parameter=list(support=0.00009, confidence=1))
inspect(kkrRules)
################################################################################################################################
#GAYLE VS MI
gayleVsMI = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Mumbai Indians"')
miRules = apriori(gayleVsMI, parameter=list(support=0.00009, confidence=1))
inspect(miRules)
# AB de Villiers VS MI
abVsMI = sqldf('select batsman, outcome from deliveries where batsman = "AB de Villiers" and bowling_team = "Mumbai Indians"')
abRules = apriori(abVsMI, parameter=list(support=0.00009, confidence=1))
inspect(abRules)
################################################################################################################################
#GAYLE VS SRH
gayleVsSRH = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowling_team = "Sunrisers Hyderabad"')
srhRules = apriori(gayleVsSRH, parameter=list(support=0.00009, confidence=1))
inspect(srhRules)
################################################################################################################################
#GAYLE VS Harbhajan Singh
gayleVsHS = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "Harbhajan Singh"')
hsRules = apriori(gayleVsHS, parameter=list(support=0.00009, confidence=1))
inspect(hsRules)
################################################################################################################################
#GAYLE VS SL Malinga
gayleVsLM = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "SL Malinga"')
lmRules = apriori(gayleVsLM, parameter=list(support=0.00009, confidence=1))
inspect(lmRules)
################################################################################################################################
#GAYLE VS P Kumar
gayleVsPK = sqldf('select batsman, outcome from deliveries where batsman = "CH Gayle" and bowler = "P Kumar"')
pkRules = apriori(gayleVsPK, parameter=list(support=0.00009, confidence=1))
inspect(pkRules)
setwd("~/")
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
setwd("C:/Users/damie/Desktop/BigData_IPL_Analysis/ipl/Analysis")
setwd("~/InitialDatasets")
#install.packages("readr")
#install.packages("sqldf")
library(sqldf)
#library(readr)
#read all matches from csv
allMatches = read.csv("matches.csv")
#remove any matches that produced no result or were decided by DL
completedMatches <- sqldf('SELECT * FROM allMatches where dl_applied == 0 AND result != "no result"')
#write completed matches to matches.csv in Analysis folder
write.csv(completedMatches,'../Analysis/matches.csv')
#update deliveries in Analysis folder to only include completed matches
deliveries <-read.csv("deliveries.csv")
deliveriesFromCompletedMatches <- sqldf('select * from deliveries where match_id in (select id from completedMatches)')
write.csv(deliveriesFromCompletedMatches,'../Analysis/deliveries.csv')
setwd("~")
#install.packages("readr")
#install.packages("sqldf")
library(sqldf)
#library(readr)
#read all matches from csv
allMatches = read.csv("matches.csv")
#remove any matches that produced no result or were decided by DL
completedMatches <- sqldf('SELECT * FROM allMatches where dl_applied == 0 AND result != "no result"')
#write completed matches to matches.csv in Analysis folder
write.csv(completedMatches,'../Analysis/matches.csv')
#update deliveries in Analysis folder to only include completed matches
deliveries <-read.csv("deliveries.csv")
deliveriesFromCompletedMatches <- sqldf('select * from deliveries where match_id in (select id from completedMatches)')
write.csv(deliveriesFromCompletedMatches,'../Analysis/deliveries.csv')
setwd("~/")
setwd("~/")
#install.packages("readr")
#install.packages("sqldf")
library(sqldf)
#library(readr)
#read all matches from csv
allMatches = read.csv("matches.csv")
#remove any matches that produced no result or were decided by DL
completedMatches <- sqldf('SELECT * FROM allMatches where dl_applied == 0 AND result != "no result"')
#write completed matches to matches.csv in Analysis folder
write.csv(completedMatches,'../Analysis/matches.csv')
#update deliveries in Analysis folder to only include completed matches
deliveries <-read.csv("deliveries.csv")
deliveriesFromCompletedMatches <- sqldf('select * from deliveries where match_id in (select id from completedMatches)')
write.csv(deliveriesFromCompletedMatches,'../Analysis/deliveries.csv')
pwd
pwd
getwd
getwd()
setwd("~/")
getwd()
setwd("~/")
getwd()
setwd("C:/Users/damie/Desktop/BigData_IPL_Analysis/ipl/Analysis")
###
# SET WORKING DIRECTORY TO SOURCE FILE LOCATION
###
setwd("../InitialDatasets")
#install.packages("readr")
#install.packages("sqldf")
library(sqldf)
#library(readr)
#read all matches from csv
allMatches = read.csv("matches.csv")
#remove any matches that produced no result or were decided by DL
completedMatches <- sqldf('SELECT * FROM allMatches where dl_applied == 0 AND result != "no result"')
#write completed matches to matches.csv in Analysis folder
write.csv(completedMatches,'../Analysis/matches.csv')
#update deliveries in Analysis folder to only include completed matches
deliveries <-read.csv("deliveries.csv")
deliveriesFromCompletedMatches <- sqldf('select * from deliveries where match_id in (select id from completedMatches)')
write.csv(deliveriesFromCompletedMatches,'../Analysis/deliveries.csv')
###
# SET WORKING DIRECTORY TO SOURCE FILE LOCATION
###
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
setwd("../InitialDatasets")
#install.packages("readr")
#install.packages("sqldf")
library(sqldf)
#library(readr)
#read all matches from csv
allMatches = read.csv("matches.csv")
#remove any matches that produced no result or were decided by DL
completedMatches <- sqldf('SELECT * FROM allMatches where dl_applied == 0 AND result != "no result"')
#write completed matches to matches.csv in Analysis folder
write.csv(completedMatches,'../Analysis/matches.csv')
#update deliveries in Analysis folder to only include completed matches
deliveries <-read.csv("deliveries.csv")
deliveriesFromCompletedMatches <- sqldf('select * from deliveries where match_id in (select id from completedMatches)')
write.csv(deliveriesFromCompletedMatches,'../Analysis/deliveries.csv')
